[VAMS][2016-11-01 11:12:30,011] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:30,023] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:30,024] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:12:30,029] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:12:30 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:12:30,079] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:30,079] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:30,080] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:12:30,090] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:12:56,616] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:56,624] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:56,626] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:12:56,633] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6321e813: startup date [Tue Nov 01 11:12:56 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:12:56,696] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:56,698] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:12:56,700] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:12:56,721] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:14:18,028] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:14:18,031] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:14:18,032] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:14:18,036] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:14:18 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:14:18,072] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:14:18,073] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:14:18,073] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:14:18,080] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:17:03,484] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:03,489] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:03,489] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:17:03,494] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:17:03 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:17:03,535] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:03,536] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:03,536] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:17:03,545] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:17:50,605] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:50,610] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:50,610] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:17:50,615] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:17:50 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:17:50,649] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:50,650] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:17:50,650] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:17:50,658] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:25:59,015] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:25:59,018] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:25:59,019] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:25:59,023] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:25:59 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:25:59,053] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:25:59,053] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:25:59,054] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:25:59,064] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:26:22,682] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:26:22,686] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:26:22,686] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:26:22,690] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:26:22 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:26:22,719] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:26:22,719] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:26:22,720] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:26:22,732] INFO | Loading XML bean definitions from class path resource [com.jia/dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:32:02,588] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:02,592] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:02,592] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:32:02,596] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:32:02 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:32:02,637] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:02,637] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:02,638] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:32:02,649] INFO | Loading XML bean definitions from class path resource [src/dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:32:35,437] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:35,441] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:35,441] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:32:35,446] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:32:35 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:32:35,480] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:35,480] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:32:35,481] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:32:35,492] INFO | Loading XML bean definitions from class path resource [src/dubbo-consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:34:28,400] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:28,404] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:28,405] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:34:28,409] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:34:28 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:34:28,447] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:28,448] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:28,448] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:34:28,457] INFO | Loading XML bean definitions from class path resource [src/dubbo-consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:34:38,563] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:38,569] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:38,569] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:34:38,575] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:34:38 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:34:38,612] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:38,612] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:34:38,613] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:34:38,622] INFO | Loading XML bean definitions from class path resource [src/dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:35:33,028] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:35:33,031] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:35:33,032] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:35:33,035] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:35:33 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:35:33,068] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:35:33,069] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:35:33,069] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:35:33,083] INFO | Loading XML bean definitions from class path resource [../src/dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:36:39,939] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:39,943] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:39,944] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:36:39,950] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:36:39 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:36:40,001] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:40,002] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:40,002] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:36:40,014] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:36:56,538] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:56,542] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:56,543] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:36:56,547] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:36:56 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:36:56,586] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:56,587] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:36:56,587] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:36:56,597] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:37:39,326] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:39,330] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:39,331] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:37:39,335] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:37:39 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:37:39,375] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:39,376] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:39,376] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:37:39,388] INFO | Loading XML bean definitions from class path resource [dubbo-provider.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:37:39,415] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2016-11-01 11:37:39,513] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2016-11-01 11:37:39,581] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.8.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2016-11-01 11:37:39,586] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-2.5.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2016-11-01 11:37:39,638] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2016-11-01 11:37:39,666] DEBUG | Found XML schema [http://www.springframework.org/schema/context/spring-context.xsd] in classpath: org/springframework/context/config/spring-context-2.5.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2016-11-01 11:37:39,677] DEBUG | Found XML schema [http://www.springframework.org/schema/tool/spring-tool-2.5.xsd] in classpath: org/springframework/beans/factory/xml/spring-tool-2.5.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2016-11-01 11:37:39,706] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(92)
[VAMS][2016-11-01 11:37:39,826] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2016-11-01 11:37:39,833] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2016-11-01 11:37:39,918] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:39,918] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:39,919] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:37:39,937] DEBUG | Resolved classpath location [com/jia/] to resources [URL [file:/D:/SpringMVCDemo/target/classes/com/jia/]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findAllClassPathResources(312)
[VAMS][2016-11-01 11:37:39,940] DEBUG | Looking for matching resources in directory tree [D:\SpringMVCDemo\target\classes\com\jia] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doFindMatchingFileSystemResources(637)
[VAMS][2016-11-01 11:37:39,941] DEBUG | Searching directory [D:\SpringMVCDemo\target\classes\com\jia] for files matching pattern [D:/SpringMVCDemo/target/classes/com/jia/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(699)
[VAMS][2016-11-01 11:37:39,944] DEBUG | Searching directory [D:\SpringMVCDemo\target\classes\com\jia\controller] for files matching pattern [D:/SpringMVCDemo/target/classes/com/jia/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(699)
[VAMS][2016-11-01 11:37:39,946] DEBUG | Searching directory [D:\SpringMVCDemo\target\classes\com\jia\service] for files matching pattern [D:/SpringMVCDemo/target/classes/com/jia/**/*.class] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.doRetrieveMatchingFiles(699)
[VAMS][2016-11-01 11:37:39,948] DEBUG | Resolved location pattern [classpath*:com/jia/**/*.class] to resources [file [D:\SpringMVCDemo\target\classes\com\jia\controller\Demo3ClientHandler.class], file [D:\SpringMVCDemo\target\classes\com\jia\controller\Demo3ServerHandler.class], file [D:\SpringMVCDemo\target\classes\com\jia\controller\Demo4ClientHandler.class], file [D:\SpringMVCDemo\target\classes\com\jia\controller\Demo4ServerHandler.class], file [D:\SpringMVCDemo\target\classes\com\jia\controller\MainController.class], file [D:\SpringMVCDemo\target\classes\com\jia\controller\TestClient03.class], file [D:\SpringMVCDemo\target\classes\com\jia\controller\TestServer03.class], file [D:\SpringMVCDemo\target\classes\com\jia\DubboConsumer.class], file [D:\SpringMVCDemo\target\classes\com\jia\HelloImpl.class], file [D:\SpringMVCDemo\target\classes\com\jia\HelloService.class], file [D:\SpringMVCDemo\target\classes\com\jia\ProviderMain.class], file [D:\SpringMVCDemo\target\classes\com\jia\service\MyJdbc.class], file [D:\SpringMVCDemo\target\classes\com\jia\service\RedisClient.class]] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(430)
[VAMS][2016-11-01 11:37:40,001] DEBUG | Identified candidate component class: file [D:\SpringMVCDemo\target\classes\com\jia\controller\MainController.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(286)
[VAMS][2016-11-01 11:37:40,005] DEBUG | Identified candidate component class: file [D:\SpringMVCDemo\target\classes\com\jia\DubboConsumer.class] | [main] org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider.findCandidateComponents(286)
[VAMS][2016-11-01 11:37:40,052] DEBUG | Loaded 15 bean definitions from location pattern [/dubbo-provider.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(224)
[VAMS][2016-11-01 11:37:40,054] DEBUG | Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: org.springframework.beans.factory.support.DefaultListableBeanFactory@5c18298f: defining beans [demoService,pyh_provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.jia.HelloService,com.alibaba.dubbo.config.spring.AnnotationBean,mainController,dubboConsumer,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(612)
[VAMS][2016-11-01 11:37:40,128] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,128] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,174] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,176] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,239] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.spring.AnnotationBean' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,239] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.spring.AnnotationBean' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,242] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.spring.AnnotationBean' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,286] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.spring.AnnotationBean' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,290] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:40,292] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:37:40,293] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:37:40,295] DEBUG | Resolved classpath location [rpc/dubbodemo/] to resources [] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findAllClassPathResources(312)
[VAMS][2016-11-01 11:37:40,295] DEBUG | Resolved location pattern [classpath*:rpc/dubbodemo/**/*.class] to resources [] | [main] org.springframework.core.io.support.PathMatchingResourcePatternResolver.findPathMatchingResources(430)
[VAMS][2016-11-01 11:37:40,297] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,297] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,299] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,300] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,300] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,300] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,301] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,301] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,302] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,302] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,315] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,316] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,316] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,316] DEBUG | Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,318] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,318] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,318] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,319] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,319] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,319] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,320] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,320] DEBUG | Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,320] DEBUG | Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,320] DEBUG | Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,321] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.spring.AnnotationBean' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,325] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@197d671] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(718)
[VAMS][2016-11-01 11:37:40,328] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7fc2413d] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(742)
[VAMS][2016-11-01 11:37:40,331] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5c18298f: defining beans [demoService,pyh_provider,com.alibaba.dubbo.config.RegistryConfig,dubbo,com.jia.HelloService,com.alibaba.dubbo.config.spring.AnnotationBean,mainController,dubboConsumer,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.event.internalEventListenerProcessor,org.springframework.context.event.internalEventListenerFactory,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(741)
[VAMS][2016-11-01 11:37:40,331] DEBUG | Creating shared instance of singleton bean 'pyh_provider' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,331] DEBUG | Creating instance of bean 'pyh_provider' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,340] DEBUG | Eagerly caching bean 'pyh_provider' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,348] DEBUG | Finished creating instance of bean 'pyh_provider' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,348] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,348] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,349] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,353] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,353] DEBUG | Creating shared instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,353] DEBUG | Creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,355] DEBUG | Eagerly caching bean 'dubbo' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,380] DEBUG | Finished creating instance of bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,380] DEBUG | Creating shared instance of singleton bean 'com.jia.HelloService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,380] DEBUG | Creating instance of bean 'com.jia.HelloService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,429] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,569] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,585] DEBUG | Eagerly caching bean 'com.jia.HelloService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,618] DEBUG | Creating shared instance of singleton bean 'demoService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,619] DEBUG | Creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,619] DEBUG | Eagerly caching bean 'demoService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,620] DEBUG | Finished creating instance of bean 'demoService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,622] DEBUG | Invoking afterPropertiesSet() on bean with name 'com.jia.HelloService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1620)
[VAMS][2016-11-01 11:37:40,623] DEBUG | Returning cached instance of singleton bean 'pyh_provider' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,623] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,624] DEBUG | Returning cached instance of singleton bean 'dubbo' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,624] DEBUG | Finished creating instance of bean 'com.jia.HelloService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,624] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.spring.AnnotationBean' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,624] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,625] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,625] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerProcessor' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,625] DEBUG | Creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,626] DEBUG | Eagerly caching bean 'org.springframework.context.event.internalEventListenerProcessor' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,627] DEBUG | Finished creating instance of bean 'org.springframework.context.event.internalEventListenerProcessor' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,628] DEBUG | Creating shared instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:37:40,628] DEBUG | Creating instance of bean 'org.springframework.context.event.internalEventListenerFactory' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:37:40,628] DEBUG | Eagerly caching bean 'org.springframework.context.event.internalEventListenerFactory' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:37:40,629] DEBUG | Finished creating instance of bean 'org.springframework.context.event.internalEventListenerFactory' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:37:40,629] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,630] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,630] DEBUG | Returning cached instance of singleton bean 'org.springframework.context.event.internalEventListenerFactory' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,656] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@65b3f4a4] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(769)
[VAMS][2016-11-01 11:37:40,657] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,663] DEBUG | Returning cached instance of singleton bean 'com.jia.HelloService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:37:40,663] INFO |  [DUBBO] The service ready on spring started. service: com.jia.HelloService, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.spring.ServiceBean.onApplicationEvent(107)
[VAMS][2016-11-01 11:37:40,727] DEBUG |  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,740] DEBUG |  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,754] DEBUG |  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,763] INFO |  [DUBBO] Export dubbo service com.jia.HelloService to local registry, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.exportLocal(510)
[VAMS][2016-11-01 11:37:40,764] INFO |  [DUBBO] Export dubbo service com.jia.HelloService to url dubbo://192.168.5.183:20880/com.jia.HelloService?anyhost=true&application=pyh_provider&dubbo=2.5.3&interface=com.jia.HelloService&methods=sayHello&pid=5976&side=provider&threads=2&timestamp=1477971460682, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(470)
[VAMS][2016-11-01 11:37:40,764] INFO |  [DUBBO] Register dubbo service com.jia.HelloService url dubbo://192.168.5.183:20880/com.jia.HelloService?anyhost=true&application=pyh_provider&dubbo=2.5.3&interface=com.jia.HelloService&methods=sayHello&pid=5976&side=provider&threads=2&timestamp=1477971460682 to registry registry://192.168.2.95:2181/com.alibaba.dubbo.registry.RegistryService?application=pyh_provider&dubbo=2.5.3&pid=5976&registry=zookeeper&timestamp=1477971460669, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.config.ServiceConfig.doExportUrlsFor1Protocol(481)
[VAMS][2016-11-01 11:37:40,771] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,780] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,811] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adpative implements com.alibaba.dubbo.remoting.Transporter {
public com.alibaba.dubbo.remoting.Client connect(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public com.alibaba.dubbo.remoting.Server bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.ChannelHandler arg1) throws com.alibaba.dubbo.common.URL {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Transporter) name from url(" + url.toString() + ") use keys([server, transporter])");
com.alibaba.dubbo.remoting.Transporter extension = (com.alibaba.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,832] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adpative implements com.alibaba.dubbo.remoting.Dispatcher {
public com.alibaba.dubbo.remoting.ChannelHandler dispatch(com.alibaba.dubbo.remoting.ChannelHandler arg0, com.alibaba.dubbo.common.URL arg1) {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.Dispatcher) name from url(" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
com.alibaba.dubbo.remoting.Dispatcher extension = (com.alibaba.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,846] DEBUG |  [DUBBO] package com.alibaba.dubbo.common.threadpool;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adpative implements com.alibaba.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.common.threadpool.ThreadPool) name from url(" + url.toString() + ") use keys([threadpool])");
com.alibaba.dubbo.common.threadpool.ThreadPool extension = (com.alibaba.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,879] DEBUG |  [DUBBO] Using the autodetected NIO constraint level: 0, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.netty.NettyHelper$DubboLogger.debug(70)
[VAMS][2016-11-01 11:37:40,937] INFO |  [DUBBO] Start NettyServer bind /0.0.0.0:20880, export /192.168.5.183:20880, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.remoting.transport.AbstractServer.<init>(69)
[VAMS][2016-11-01 11:37:40,944] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:37:40,961] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2016-11-01 11:37:40,962] INFO |  [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
[VAMS][2016-11-01 11:37:40,962] INFO |  [DUBBO] Close dubbo server: /192.168.5.183:20880, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.dubbo.DubboProtocol.destroy(393)
[VAMS][2016-11-01 11:37:40,963] INFO |  [DUBBO] Close NettyServer bind /0.0.0.0:20880, export /192.168.5.183:20880, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.remoting.transport.AbstractServer.close(146)
[VAMS][2016-11-01 11:37:40,965] INFO |  [DUBBO] Unexport service: dubbo://192.168.5.183:20880/com.jia.HelloService?anyhost=true&application=pyh_provider&dubbo=2.5.3&interface=com.jia.HelloService&methods=sayHello&pid=5976&side=provider&threads=2&timestamp=1477971460682, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2016-11-01 11:37:40,966] INFO |  [DUBBO] Unexport service: injvm://127.0.0.1/com.jia.HelloService?anyhost=true&application=pyh_provider&dubbo=2.5.3&interface=com.jia.HelloService&methods=sayHello&pid=5976&side=provider&threads=2&timestamp=1477971460682, dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.rpc.protocol.AbstractProtocol.destroy(76)
[VAMS][2016-11-01 11:40:49,613] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:40:49,616] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:40:49,617] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:40:49,622] INFO | Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: startup date [Tue Nov 01 11:40:49 CST 2016]; root of context hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.prepareRefresh(578)
[VAMS][2016-11-01 11:40:49,658] DEBUG | Adding [systemProperties] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:40:49,659] DEBUG | Adding [systemEnvironment] PropertySource with lowest search precedence | [main] org.springframework.core.env.MutablePropertySources.addLast(109)
[VAMS][2016-11-01 11:40:49,659] DEBUG | Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment] | [main] org.springframework.core.env.AbstractEnvironment.<init>(127)
[VAMS][2016-11-01 11:40:49,668] INFO | Loading XML bean definitions from class path resource [dubbo-consumer.xml] | [main] org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(317)
[VAMS][2016-11-01 11:40:49,691] DEBUG | Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl] | [main] org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(73)
[VAMS][2016-11-01 11:40:49,727] DEBUG | Loading schema mappings from [META-INF/spring.schemas] | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(141)
[VAMS][2016-11-01 11:40:49,735] DEBUG | Loaded schema mappings: {http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/cache/spring-cache-4.2.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/aop/spring-aop-4.1.xsd=org/springframework/aop/config/spring-aop-4.1.xsd, http://www.springframework.org/schema/context/spring-context-3.1.xsd=org/springframework/context/config/spring-context-3.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd=org/springframework/jdbc/config/spring-jdbc-4.1.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.4.xsd=org/springframework/data/repository/config/spring-repository-1.4.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd=org/springframework/web/servlet/config/spring-mvc-4.1.xsd, http://www.springframework.org/schema/util/spring-util-3.0.xsd=org/springframework/beans/factory/xml/spring-util-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.8.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-3.2.xsd=org/springframework/aop/config/spring-aop-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-4.1.xsd=org/springframework/scripting/config/spring-lang-4.1.xsd, http://www.springframework.org/schema/context/spring-context-4.0.xsd=org/springframework/context/config/spring-context-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd=org/springframework/web/servlet/config/spring-mvc-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-4.2.xsd=org/springframework/beans/factory/xml/spring-beans-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-4.1.xsd=org/springframework/beans/factory/xml/spring-tool-4.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.2.xsd=org/springframework/scripting/config/spring-lang-3.2.xsd, http://www.springframework.org/schema/cache/spring-cache-3.2.xsd=org/springframework/cache/config/spring-cache-3.2.xsd, http://www.springframework.org/schema/jee/spring-jee-4.1.xsd=org/springframework/ejb/config/spring-jee-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd=org/springframework/jdbc/config/spring-jdbc-3.1.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/task/spring-task-4.2.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.2.xsd=org/springframework/beans/factory/xml/spring-tool-3.2.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-4.2.xsd=org/springframework/transaction/config/spring-tx-4.2.xsd, http://www.springframework.org/schema/cache/spring-cache-4.1.xsd=org/springframework/cache/config/spring-cache-4.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.0.xsd=org/springframework/aop/config/spring-aop-4.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.2.xsd=org/springframework/ejb/config/spring-jee-3.2.xsd, http://www.springframework.org/schema/context/spring-context-3.0.xsd=org/springframework/context/config/spring-context-3.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd=org/springframework/jdbc/config/spring-jdbc-4.0.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd=org/springframework/web/servlet/config/spring-mvc-4.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-3.2.xsd=org/springframework/beans/factory/xml/spring-beans-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop-3.1.xsd=org/springframework/aop/config/spring-aop-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-4.0.xsd=org/springframework/scripting/config/spring-lang-4.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.8.xsd=org/springframework/data/repository/config/spring-repository-1.8.xsd, http://www.springframework.org/schema/mvc/spring-mvc.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd=org/springframework/web/servlet/config/spring-mvc-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-4.1.xsd=org/springframework/beans/factory/xml/spring-beans-4.1.xsd, http://www.springframework.org/schema/tool/spring-tool-4.0.xsd=org/springframework/beans/factory/xml/spring-tool-4.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.2.xsd=org/springframework/transaction/config/spring-tx-3.2.xsd, http://www.springframework.org/schema/lang/spring-lang-3.1.xsd=org/springframework/scripting/config/spring-lang-3.1.xsd, http://www.springframework.org/schema/cache/spring-cache-3.1.xsd=org/springframework/cache/config/spring-cache-3.1.xsd, http://www.springframework.org/schema/jee/spring-jee-4.0.xsd=org/springframework/ejb/config/spring-jee-4.0.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd=org/springframework/jdbc/config/spring-jdbc-3.0.xsd, http://www.springframework.org/schema/task/spring-task-4.1.xsd=org/springframework/scheduling/config/spring-task-4.1.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-3.1.xsd=org/springframework/beans/factory/xml/spring-tool-3.1.xsd, http://www.springframework.org/schema/tx/spring-tx-4.1.xsd=org/springframework/transaction/config/spring-tx-4.1.xsd, http://www.springframework.org/schema/cache/spring-cache-4.0.xsd=org/springframework/cache/config/spring-cache-4.0.xsd, http://code.alibabatech.com/schema/dubbo/dubbo.xsd=META-INF/dubbo.xsd, http://www.springframework.org/schema/jee/spring-jee-3.1.xsd=org/springframework/ejb/config/spring-jee-3.1.xsd, http://www.springframework.org/schema/util/spring-util-4.2.xsd=org/springframework/beans/factory/xml/spring-util-4.2.xsd, http://www.springframework.org/schema/task/spring-task-3.2.xsd=org/springframework/scheduling/config/spring-task-3.2.xsd, http://www.springframework.org/schema/beans/spring-beans-3.1.xsd=org/springframework/beans/factory/xml/spring-beans-3.1.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.3.xsd, http://www.springframework.org/schema/aop/spring-aop-3.0.xsd=org/springframework/aop/config/spring-aop-3.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.7.xsd=org/springframework/data/repository/config/spring-repository-1.7.xsd, http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd=org/springframework/web/servlet/config/spring-mvc-3.0.xsd, http://www.springframework.org/schema/beans/spring-beans-4.0.xsd=org/springframework/beans/factory/xml/spring-beans-4.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.8.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-3.1.xsd=org/springframework/transaction/config/spring-tx-3.1.xsd, http://www.springframework.org/schema/lang/spring-lang-3.0.xsd=org/springframework/scripting/config/spring-lang-3.0.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/task/spring-task-4.0.xsd=org/springframework/scheduling/config/spring-task-4.0.xsd, http://www.springframework.org/schema/tool/spring-tool-3.0.xsd=org/springframework/beans/factory/xml/spring-tool-3.0.xsd, http://www.springframework.org/schema/tx/spring-tx-4.0.xsd=org/springframework/transaction/config/spring-tx-4.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/jee/spring-jee-3.0.xsd=org/springframework/ejb/config/spring-jee-3.0.xsd, http://www.springframework.org/schema/util/spring-util-4.1.xsd=org/springframework/beans/factory/xml/spring-util-4.1.xsd, http://www.springframework.org/schema/task/spring-task-3.1.xsd=org/springframework/scheduling/config/spring-task-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-3.0.xsd=org/springframework/beans/factory/xml/spring-beans-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.2.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.2.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.6.xsd=org/springframework/data/repository/config/spring-repository-1.6.xsd, http://www.springframework.org/schema/util/spring-util-3.2.xsd=org/springframework/beans/factory/xml/spring-util-3.2.xsd, http://www.springframework.org/schema/task/spring-task.xsd=org/springframework/scheduling/config/spring-task-4.2.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-3.0.xsd=org/springframework/transaction/config/spring-tx-3.0.xsd, http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-4.2.xsd=org/springframework/context/config/spring-context-4.2.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.0.xsd=org/springframework/data/repository/config/spring-repository-1.0.xsd, http://www.springframework.org/schema/util/spring-util-4.0.xsd=org/springframework/beans/factory/xml/spring-util-4.0.xsd, http://www.springframework.org/schema/task/spring-task-3.0.xsd=org/springframework/scheduling/config/spring-task-3.0.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.1.xsd, http://www.springframework.org/schema/aop/spring-aop-4.2.xsd=org/springframework/aop/config/spring-aop-4.2.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-3.2.xsd=org/springframework/context/config/spring-context-3.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-4.2.xsd=org/springframework/jdbc/config/spring-jdbc-4.2.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd=org/springframework/data/repository/config/spring-repository-1.5.xsd, http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd=org/springframework/web/servlet/config/spring-mvc-4.2.xsd, http://www.springframework.org/schema/util/spring-util-3.1.xsd=org/springframework/beans/factory/xml/spring-util-3.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/cache/spring-cache.xsd=org/springframework/cache/config/spring-cache-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-4.2.xsd=org/springframework/scripting/config/spring-lang-4.2.xsd, http://www.springframework.org/schema/context/spring-context-4.1.xsd=org/springframework/context/config/spring-context-4.1.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-4.2.xsd=org/springframework/beans/factory/xml/spring-tool-4.2.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/data/repository/spring-repository-1.11.xsd=org/springframework/data/repository/config/spring-repository-1.11.xsd, http://www.springframework.org/schema/jee/spring-jee-4.2.xsd=org/springframework/ejb/config/spring-jee-4.2.xsd, http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd=org/springframework/jdbc/config/spring-jdbc-3.2.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd=org/springframework/data/jpa/repository/config/spring-jpa-1.0.xsd} | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.getSchemaMappings(147)
[VAMS][2016-11-01 11:40:49,756] DEBUG | Found XML schema [http://www.springframework.org/schema/beans/spring-beans-4.0.xsd] in classpath: org/springframework/beans/factory/xml/spring-beans-4.0.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2016-11-01 11:40:49,809] DEBUG | Found XML schema [http://code.alibabatech.com/schema/dubbo/dubbo.xsd] in classpath: META-INF/dubbo.xsd | [main] org.springframework.beans.factory.xml.PluggableSchemaResolver.resolveEntity(119)
[VAMS][2016-11-01 11:40:49,843] DEBUG | Loading bean definitions | [main] org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader.registerBeanDefinitions(92)
[VAMS][2016-11-01 11:40:49,859] DEBUG | Loaded NamespaceHandler mappings: {http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/mvc=org.springframework.web.servlet.config.MvcNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://code.alibabatech.com/schema/dubbo=com.alibaba.dubbo.config.spring.schema.DubboNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/jdbc=org.springframework.jdbc.config.JdbcNamespaceHandler, http://www.springframework.org/schema/data/repository=org.springframework.data.repository.config.RepositoryNameSpaceHandler, http://www.springframework.org/schema/data/jpa=org.springframework.data.jpa.repository.config.JpaRepositoryNameSpaceHandler, http://www.springframework.org/schema/cache=org.springframework.cache.config.CacheNamespaceHandler, http://www.springframework.org/schema/c=org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/task=org.springframework.scheduling.config.TaskNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/data/keyvalue=org.springframework.data.keyvalue.repository.config.KeyValueRepositoryNameSpaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler} | [main] org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver.getHandlerMappings(157)
[VAMS][2016-11-01 11:40:49,867] INFO | using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter | [main] ?.?(?)
[VAMS][2016-11-01 11:40:49,900] DEBUG | Loaded 3 bean definitions from location pattern [/dubbo-consumer.xml] | [main] org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(224)
[VAMS][2016-11-01 11:40:49,901] DEBUG | Bean factory for org.springframework.context.support.ClassPathXmlApplicationContext@2aae9190: org.springframework.beans.factory.support.DefaultListableBeanFactory@5ae63ade: defining beans [dubbotest-consumer,com.alibaba.dubbo.config.RegistryConfig,dubboService]; root of factory hierarchy | [main] org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(612)
[VAMS][2016-11-01 11:40:49,913] DEBUG | Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2d8f65a4] | [main] org.springframework.context.support.AbstractApplicationContext.initMessageSource(718)
[VAMS][2016-11-01 11:40:49,914] DEBUG | Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@57e1b0c] | [main] org.springframework.context.support.AbstractApplicationContext.initApplicationEventMulticaster(742)
[VAMS][2016-11-01 11:40:49,915] DEBUG | Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5ae63ade: defining beans [dubbotest-consumer,com.alibaba.dubbo.config.RegistryConfig,dubboService]; root of factory hierarchy | [main] org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(741)
[VAMS][2016-11-01 11:40:49,916] DEBUG | Creating shared instance of singleton bean 'dubbotest-consumer' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:40:49,916] DEBUG | Creating instance of bean 'dubbotest-consumer' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:40:49,928] DEBUG | Eagerly caching bean 'dubbotest-consumer' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:40:49,970] DEBUG | Finished creating instance of bean 'dubbotest-consumer' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:40:49,970] DEBUG | Creating shared instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:40:49,971] DEBUG | Creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:40:49,971] DEBUG | Eagerly caching bean 'com.alibaba.dubbo.config.RegistryConfig' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:40:49,988] DEBUG | Finished creating instance of bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:40:49,989] DEBUG | Creating shared instance of singleton bean 'dubboService' | [main] org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(221)
[VAMS][2016-11-01 11:40:49,989] DEBUG | Creating instance of bean 'dubboService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(448)
[VAMS][2016-11-01 11:40:50,040] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:40:50,270] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:40:50,293] DEBUG |  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:40:50,317] DEBUG | Eagerly caching bean 'dubboService' to allow for resolving potential circular references | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(529)
[VAMS][2016-11-01 11:40:50,386] DEBUG | Invoking afterPropertiesSet() on bean with name 'dubboService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(1620)
[VAMS][2016-11-01 11:40:50,387] DEBUG | Returning cached instance of singleton bean 'dubbotest-consumer' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:40:50,397] DEBUG | Returning cached instance of singleton bean 'com.alibaba.dubbo.config.RegistryConfig' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:40:50,397] DEBUG | Finished creating instance of bean 'dubboService' | [main] org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(484)
[VAMS][2016-11-01 11:40:50,400] DEBUG | Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@4ac3c60d] | [main] org.springframework.context.support.AbstractApplicationContext.initLifecycleProcessor(769)
[VAMS][2016-11-01 11:40:50,402] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:40:50,430] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2016-11-01 11:40:50,430] DEBUG | Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(81)
[VAMS][2016-11-01 11:40:50,431] DEBUG | Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null] | [main] org.springframework.core.env.PropertySourcesPropertyResolver.getProperty(103)
[VAMS][2016-11-01 11:40:50,433] DEBUG | Returning cached instance of singleton bean 'lifecycleProcessor' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:40:50,433] DEBUG | Returning cached instance of singleton bean 'dubboService' | [main] org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(251)
[VAMS][2016-11-01 11:40:50,516] DEBUG |  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:40:50,531] DEBUG |  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.5.3, current host: 127.0.0.1 | [main] com.alibaba.dubbo.common.extension.ExtensionLoader.createAdaptiveExtensionClassCode(943)
[VAMS][2016-11-01 11:40:50,563] INFO |  [DUBBO] Run shutdown hook now., dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.config.AbstractConfig$1.run(450)
[VAMS][2016-11-01 11:40:50,564] INFO |  [DUBBO] Close all registries [], dubbo version: 2.5.3, current host: 127.0.0.1 | [DubboShutdownHook] com.alibaba.dubbo.registry.support.AbstractRegistryFactory.destroyAll(63)
